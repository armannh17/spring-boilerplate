name: CI/CD Pipeline

on:
  push:
    branches: [ "main" ]

jobs:
  prepare:
    runs-on: ubuntu-24.04
    outputs:
      VERSION: ${{ steps.set-env.outputs.VERSION }}
      IMAGE_NAME: ${{ steps.set-env.outputs.IMAGE_NAME }}
      
    steps:
      - name: Compute version and image name
        id: set-env
        run: |
          VERSION="v${GITHUB_RUN_NUMBER}"
          OWNER=$(echo "${GITHUB_REPOSITORY_OWNER}" | tr '[:upper:]' '[:lower:]')
          IMAGE_NAME="ghcr.io/${OWNER}/application:${VERSION}"
          echo "::set-output name=VERSION::$VERSION"
          echo "::set-output name=IMAGE_NAME::$IMAGE_NAME"
          
  build:
    name: Build & Upload Docker Image
    runs-on: ubuntu-24.04
    needs: prepare
    env:
      VERSION: ${{ needs.prepare-env.outputs.VERSION }}
      IMAGE_NAME: ${{ needs.prepare-env.outputs.IMAGE_NAME }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build docker image
        run: docker build -t $IMAGE_NAME .

      - name: push the image into registry
        run: docker push $IMAGE_NAME

      - name: Make a new GitHub release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.VERSION }}
          name: "Release ${{ env.VERSION }}"
          body: "Automated release with Docker image `${{ env.IMAGE_NAME }}`"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Deploy on VPS
    runs-on: ubuntu-24.04
    needs: build
    env:
      VERSION: ${{ needs.prepare-env.outputs.VERSION }}
      IMAGE_NAME: ${{ needs.prepare-env.outputs.IMAGE_NAME }}

    steps:
      - name: Setup SSH
        run: mkdir -p ~/.ssh && echo "${{ secrets.SSH_PK }}" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa && ssh-keyscan -p ${{ secrets.SSH_PORT }} -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts

      - name: Pull and deploy Docker image
        run: |
          ssh -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << EOF
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ${{ env.IMAGE_NAME }}
            cd ~/store-builder
            docker compose down
            docker compose up -d
          EOF
